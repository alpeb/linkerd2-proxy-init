# syntax=docker/dockerfile:1.4

FROM --platform=$BUILDPLATFORM ghcr.io/linkerd/dev:v47-rust-musl as cni-repair-controller
WORKDIR /build
COPY --link justfile justfile-rust .
COPY --link Cargo.toml Cargo.lock .
COPY --link validator validator
COPY --link cni-repair-controller cni-repair-controller
RUN --mount=type=cache,target=/usr/local/cargo/registry \
    cargo install --force --locked bindgen-cli && \
    cargo fetch
RUN apt-get update
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y musl musl-dev musl-tools binutils-aarch64-linux-gnu libc6-dev-arm64-cross gcc-arm-linux-gnueabi binutils-arm-linux-gnueabi
env CARGO="cargo auditable"
ARG TARGETARCH
# Enable tokio runtime metrics
ENV RUSTFLAGS="--cfg tokio_unstable"
RUN --mount=type=cache,target=target \
    --mount=type=cache,target=/usr/local/cargo/registry \
    target="aarch64-unknown-linux-musl" && \
    just cni-repair-controller arch="$TARGETARCH" profile=release build && \
    mv "target/$target/release/linkerd-cni-repair-controller" .

FROM --platform=$TARGETPLATFORM alpine:3.22.1 as runtime
WORKDIR /linkerd
RUN apk add \
    # For inotifywait
    inotify-tools \
    # For pgrep
    procps \
    bash \
    jq

COPY --from=cni-repair-controller /build/linkerd-cni-repair-controller /usr/lib/linkerd/
COPY LICENSE .
COPY cni-plugin/deployment/scripts/install-cni.sh .
COPY cni-plugin/deployment/scripts/filter.jq .
ENV PATH=/linkerd:/opt/cni/bin:$PATH
CMD ["install-cni.sh"]
